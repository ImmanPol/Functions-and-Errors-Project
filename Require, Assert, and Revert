// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Iggy {
    uint256 public myNumber;

    function setNumber(uint256 _num) external {
        // Validate input before making changes
        require(_num != 0, "Number cannot be equal to zero");

        // Perform the operation
        uint256 newNumber = myNumber + _num;

        // Validate internal state using assert
        assert(newNumber > myNumber);

        // Check if the operation exceeded a limit and revert if necessary
        if (_num > 100) {
            revert("The number surpassed the limit");
        }

        // Update the state variable
        myNumber = newNumber;
    }
}
